<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 将命名空间与接口类名进行绑定 -->
<mapper namespace="hyman.springbootdemo.dao.UserDao" >
  <resultMap id="countMap" type="java.lang.Long"/>
  <resultMap id="baseResultMap" type="hyman.springbootdemo.entity.User">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="Name" jdbcType="VARCHAR" />
    <result column="password" property="Pass_word" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, name, password,age
  </sql>

  <!--
    集合的多结果集，多 sql 查询:
    1，必须给定一个指定的名称给对应的结果集合，做法是：增加一个“resultSets”属性，并使用逗号作为间隔。
    2，也可以采用级联 collection 的方式，把结果集作为一个属性查出来。
  -->
  <!--<select id="selectAndCount" resultMap="baseResultMap,countMap" resultSets="users,count" parameterType="java.util.Map" >-->
    <!--SELECT-->
    <!--<include refid="Base_Column_List" />-->
    <!--FROM user-->
    <!--limit #{start},#{end};-->

    <!--SELECT COUNT(id) count FROM USER;-->
  <!--</select>-->

  <select id="selectAndCount" resultMap="baseResultMap,countMap" resultSets="users,count" parameterType="hyman.springbootdemo.entity.PropSet" >
    SELECT
    <include refid="Base_Column_List" />
    FROM user
    limit #{obj1},#{obj2};

    SELECT COUNT(id) count FROM USER;
  </select>

  <!--==================================分割线==========================================-->

  <select id="findAll" resultMap="baseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM user
  </select>

  <select id="find" resultMap="baseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
    FROM user

--     WHERE name like concat('%', #{name}, '%')

--     表示当 trim 中含有内容时， 添加 where， 且第一个为 and 或 or 时， 会将其去掉。 而如果没有内容， 则不添加 where。
--     prefix: 当 trim 元素包含有内容时， 增加 prefix 所指定的前缀
--     prefixOverrides: 当 trim 元素包含有内容时， 去除 prefixOverrides 指定的 前缀
--     suffix: 当 trim 元素包含有内容时， 增加 suffix 所指定的后缀
--     suffixOverrides： 当 trim 元素包含有内容时， 去除 suffixOverrides 指定的后缀

    <trim prefix="where" prefixOverrides="and | or">
      <if test="name != null">
        AND name like concat('%', #{name}, '%')
      </if>
    </trim>
  </select>

  <select id="selectByStudentIdList" resultMap="baseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    where student_id  in

    <foreach collection="list" item="id" open="(" close=")" separator="," index="i">
       #{id}
    </foreach>
  </select>

  <!--
  bind 是用于创建一个变量，并绑定到上下文中。是用于兼容不同的数据库，防止 SQL 注入等。它是通过 OGNL 表达式去定义一个上下文的
  变量， 这样方便我们使用。
  在 MySQL 中，该函数支持多参数，但在 Oracle 中只支持两个参数。那么我们可以使用 bind 来让该 SQL 达到支持两个数据库的作用。
  -->
  <select id="find1" resultMap="baseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
    FROM user

    <trim prefix="where" prefixOverrides="and | or">
      <if test="name != null">
        <bind name="nameb" value="'%'+name+'%'" />
        AND name like #{nameb}
      </if>
    </trim>
  </select>

</mapper>